{"version":3,"sources":["styles.module.css","components/Title/MainTitle/MainTitle.module.css","components/Contacts/ContactListItem/ContactListItem.module.css","components/Contacts/ContactList/ContactList.module.css","components/Contacts/transitions/slide.module.css","components/Contacts/AddContact/AddContact.module.css","components/Contacts/FindContact/FindContact.module.css","components/Contacts/transitions/pop.module.css","components/Contacts/transitions/slideTitle.module.css","components/Contacts/transitions/alert.module.css","components/Alet/Alert.module.css","components/Title/MainTitle/MainTitle.js","components/Contacts/ContactListItem/ContactListItem.js","components/Contacts/ContactList/ContactList.js","components/Contacts/AddContact/AddContact.js","components/Contacts/FindContact/FindContact.js","components/Alet/Alert.js","App.js","components/Services/LocalStoreg.js","index.js"],"names":["module","exports","MainTitle","className","styles","mainTitle","ContactListItem","contact","deleteContact","data-id","id","contactListItem","name","number","type","onClick","ContactList","contactList","TransitionGroup","component","map","CSSTransition","key","timeout","classNames","slideTransition","AddContact","state","handleInputValue","el","inputValue","target","dataset","setState","value","handleSubmit","preventDefault","uuidv4","props","onFormSubmit","this","contactForm","htmlFor","data-type","placeholder","onChange","variant","React","Component","FindContact","filterContact","findContainet","Alert","alert","App","contacts","filter","inOn","exist","addContacts","replace","l","toUpperCase","find","element","toLowerCase","setTimeout","prevState","concat","e","filteredContact","includes","JSON","parse","localStorage","getItem","data","setItem","stringify","maineContainer","subContainer","in","slideTitleTransition","unmountOnExit","length","popTransition","alertTransition","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.519eb23a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"maineContainer\":\"styles_maineContainer__3oxlU\",\"subContainer\":\"styles_subContainer__1HUZu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainTitle\":\"MainTitle_mainTitle__1aQ0x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactListItem_contactListItem__TK00h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2GLIm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__1T3SG\",\"enterActive\":\"slide_enterActive__xqMF3\",\"exit\":\"slide_exit__1NS6t\",\"exitActive\":\"slide_exitActive___Z7MP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"AddContact_contactForm__iiRKK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findContainet\":\"FindContact_findContainet__68it2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__3Liai\",\"enterActive\":\"pop_enterActive__1xaCD\",\"exit\":\"pop_exit__VaW1W\",\"exitActive\":\"pop_exitActive__1b3p7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideTitle_enter__1hyCa\",\"enterActive\":\"slideTitle_enterActive__3e5V6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"alert_enter__3I9LL\",\"enterActive\":\"alert_enterActive__1F4zi\",\"exit\":\"alert_exit__2EVRF\",\"exitActive\":\"alert_exitActive__W_Y7X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__16B1q\"};","import React from \"react\";\r\nimport styles from \"./MainTitle.module.css\";\r\n\r\nconst MainTitle = () => {\r\n  return <h1 className={styles.mainTitle}>Телефонна книга</h1>;\r\n};\r\n\r\nexport default MainTitle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({ contact, deleteContact }) => {\r\n  return (\r\n    <li data-id={contact.id} className={styles.contactListItem}>\r\n      <h4>{contact.name}:</h4>\r\n      <h4>{contact.number}</h4>\r\n      <button type=\"button\" onClick={deleteContact}>\r\n        x\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n\r\nContactListItem.propTypes = {\r\n  contact: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport slideTransition from \"../transitions/slide.module.css\";\r\n\r\nconst ContactList = ({ contactList, deleteContact }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={styles.contactList}>\r\n      {contactList.map((contact) => (\r\n        <CSSTransition\r\n          key={contact.id}\r\n          timeout={250}\r\n          classNames={slideTransition}\r\n        >\r\n          <ContactListItem\r\n            deleteContact={() => deleteContact(contact.id)}\r\n            contact={contact}\r\n            key={contact.id}\r\n          />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contactList: PropTypes.array,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport styles from \"./AddContact.module.css\";\r\n\r\nexport class AddContact extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleInputValue = (el) => {\r\n    const inputValue = el.target.dataset.type;\r\n    this.setState({\r\n      [inputValue]: el.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (el) => {\r\n    el.preventDefault();\r\n    const contact = {\r\n      id: uuidv4(),\r\n      ...this.state,\r\n    };\r\n    this.props.onFormSubmit(contact);\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.contactForm}>\r\n        <label htmlFor=\"contactName\">Ім'я</label>\r\n        <input\r\n          id=\"contactName\"\r\n          type=\"text\"\r\n          data-type=\"name\"\r\n          value={name}\r\n          placeholder=\"Введіть Ваше Ім'я\"\r\n          onChange={this.handleInputValue}\r\n        />\r\n        <br />\r\n        <label htmlFor=\"contactNumber\">Номер</label>\r\n        <input\r\n          id=\"contactNumber\"\r\n          type=\"text\"\r\n          data-type=\"number\"\r\n          value={number}\r\n          placeholder=\"Введіть Ваш номер\"\r\n          onChange={this.handleInputValue}\r\n        />\r\n        <br />\r\n        <button variant=\"outlined\" type=\"submit\" onClick={this.handleSubmit}>\r\n          Додати контакт\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nAddContact.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./FindContact.module.css\";\r\n\r\nconst FindContact = ({ filterContact }) => {\r\n  return (\r\n    <div className={styles.findContainet}>\r\n      <label htmlFor=\"findContact\">Введіть ім'я для пошуку</label>\r\n      <input id=\"findContact\" type=\"text\" onChange={filterContact} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindContact;\r\n","import React from \"react\";\r\nimport styles from \"./Alert.module.css\";\r\n\r\nconst Alert = () => {\r\n  return (\r\n    <div className={styles.alert}>\r\n      <p>Контакт з таким іменем вже існує</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MainTitle from \"./components/Title/MainTitle/MainTitle\";\nimport ContactList from \"./components/Contacts/ContactList/ContactList\";\nimport { AddContact } from \"./components/Contacts/AddContact/AddContact\";\nimport FindContact from \"./components/Contacts/FindContact/FindContact\";\nimport {\n  sendStoregData,\n  getStoregData,\n} from \"./components/Services/LocalStoreg\";\nimport { CSSTransition } from \"react-transition-group\";\nimport popTransition from \"./components/Contacts/transitions/pop.module.css\";\nimport slideTitleTransition from \"./components/Contacts/transitions/slideTitle.module.css\";\nimport alertTransition from \"./components/Contacts/transitions/alert.module.css\";\nimport styles from \"./styles.module.css\";\nimport Alert from \"./components/Alet/Alert\";\n\nclass App extends React.Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n    inOn: false,\n    exist: false,\n  };\n\n  componentDidMount() {\n    this.setState({ contacts: getStoregData() });\n    this.setState({ inOn: true });\n  }\n\n  componentDidUpdate() {\n    sendStoregData(this.state.contacts);\n  }\n\n  addContacts = (contact) => {\n    contact.name = contact.name.replace(/\\b\\w/g, (l) => l.toUpperCase());\n    if (\n      this.state.contacts.find(\n        (element) => element.name.toLowerCase() === contact.name.toLowerCase()\n      )\n    ) {\n      this.setState({ exist: true });\n      return setTimeout(() => {\n        this.setState({ exist: false });\n      }, 2000);\n    } else {\n      this.setState((prevState) => ({\n        contacts: prevState.contacts.concat([contact]),\n      }));\n    }\n  };\n\n  filterContact = (e) => {\n    let element = e.target.value;\n    this.setState({ filter: element });\n  };\n\n  filteredContact = () => {\n    if (this.state.filter) {\n      return this.state.contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\n      );\n    } else {\n      return this.state.contacts;\n    }\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, inOn, exist } = this.state;\n    return (\n      <div className={styles.maineContainer}>\n        <div className={styles.subContainer}>\n          <CSSTransition\n            in={inOn}\n            timeout={500}\n            classNames={slideTitleTransition}\n            unmountOnExit\n          >\n            <MainTitle />\n          </CSSTransition>\n          <AddContact onFormSubmit={this.addContacts} />\n          <CSSTransition\n            in={contacts.length > 1}\n            timeout={250}\n            classNames={popTransition}\n            unmountOnExit\n          >\n            <FindContact filterContact={this.filterContact} />\n          </CSSTransition>\n          <ContactList\n            contactList={this.filteredContact()}\n            deleteContact={this.deleteContact}\n          />\n        </div>\n        <CSSTransition\n          in={exist}\n          timeout={250}\n          classNames={alertTransition}\n          unmountOnExit\n        >\n          <Alert />\n        </CSSTransition>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\nApp.propTypes = {\n  contacts: PropTypes.array,\n  filter: PropTypes.string,\n  inOn: PropTypes.bool,\n  exist: PropTypes.bool,\n};\n","export const sendStoregData = (data) => {\r\n  localStorage.setItem(\"storege\", JSON.stringify(data));\r\n};\r\n\r\nexport const getStoregData = () => {\r\n  if (JSON.parse(localStorage.getItem(\"storege\")) !== null) {\r\n    return JSON.parse(localStorage.getItem(\"storege\"));\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}